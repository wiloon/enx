@address=localhost:8080

### ping

GET http://{{address}}/ping

### words-count

GET http://localhost:8080/words-count?words=Weâ€™ HTTP/1.1

### translate, local
GET http://localhost:8080/translate?word=Newsbeat%27s HTTP/1.1

### words count, multi word
GET http://localhost:8080/words-count?words=Watches%20from%20Switzerland%20are%20popular.%20Now%2C%20many%20people%20also%20buy%20secondhand%20Swiss%20watches.%20According%20to%20a%20study%2C%20the%20secondhand%20watch%20business%20is%20now%20worth%20almost%2020%20billion%20Swiss%20francs.%20It%20could%20reach%2035%20billion%20francs%20by%202030. HTTP/1.1

## translate, check and insert work

### translate, local
GET http://localhost:8080/translate?word=foo HTTP/1.1

### translate, local
GET http://localhost:8080/translate?word=reward; HTTP/1.1

## mark

### local mark
POST http://localhost:8080/mark HTTP/1.1
content-type: application/json

{"Key": "foo"}

### new word
GET http://localhost:8080/load-count?words=STOCKHOLM HTTP/1.1

### words count, local
GET http://localhost:8080/words-count?words=foo%20bar HTTP/1.1

### login
POST http://{{address}}/login HTTP/1.1
content-type: application/json

{"username": "wiloon", "password": "password_1"}

### paragraph init: Google
GET http://{{address}}/paragraph-init?paragraph=Google HTTP/1.1

### register - success
POST http://{{address}}/register HTTP/1.1
content-type: application/json

{
    "username": "testuser1",
    "password": "testpass123",
    "email": "test1@example.com"
}

### register - duplicate username
POST http://{{address}}/register HTTP/1.1
content-type: application/json

{
    "username": "wiloon",
    "password": "testpass123",
    "email": "test2@example.com"
}

### register - invalid email
POST http://{{address}}/register HTTP/1.1
content-type: application/json

{
    "username": "testuser2",
    "password": "testpass123",
    "email": "invalid-email"
}

### register - missing required fields
POST http://{{address}}/register HTTP/1.1
content-type: application/json

{
    "username": "testuser3",
    "password": "testpass123"
}

### register - empty fields
POST http://{{address}}/register HTTP/1.1
content-type: application/json

{
    "username": "",
    "password": "",
    "email": ""
}

### register - very long username
POST http://{{address}}/register HTTP/1.1
content-type: application/json

{
    "username": "thisisaverylongusernameexceedingthemaximumlengthallowedbythesystem",
    "password": "testpass123",
    "email": "test3@example.com"
}

### register - special characters in username
POST http://{{address}}/register HTTP/1.1
content-type: application/json

{
    "username": "test@user#4",
    "password": "testpass123",
    "email": "test4@example.com"
}

### register - password with special characters
POST http://{{address}}/register HTTP/1.1
content-type: application/json

{
    "username": "testuser5",
    "password": "Test@123#Pass",
    "email": "test5@example.com"
}

### register - email with special characters
POST http://{{address}}/register HTTP/1.1
content-type: application/json

{
    "username": "testuser6",
    "password": "testpass123",
    "email": "test.user+label@example.com"
}
